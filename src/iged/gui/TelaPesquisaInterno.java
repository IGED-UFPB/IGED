/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TelaPesquisaInterno.java
 *
 * Created on 19/03/2012, 13:52:29
 */
package iged.gui;

/**
 *
 * @author Dorgi
 */
public class TelaPesquisaInterno extends javax.swing.JInternalFrame {

    /** Creates new form TelaPesquisaInterno */
    public TelaPesquisaInterno() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        idRadio = new javax.swing.JRadioButton();
        autorRadio = new javax.swing.JRadioButton();
        areaRadio = new javax.swing.JRadioButton();
        pesquisaLabel = new javax.swing.JLabel();
        todosRadio = new javax.swing.JRadioButton();
        pesquisaText = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null}
            },
            new String [] {
                "Resultado da Busca"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        idRadio.setText("Id");

        autorRadio.setText("Autor");

        areaRadio.setText("Área");
        areaRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaRadioActionPerformed(evt);
            }
        });

        pesquisaLabel.setText("Pesquisa:");

        todosRadio.setText("Todos");
        todosRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todosRadioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pesquisaLabel)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(todosRadio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(areaRadio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idRadio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(autorRadio))
                            .addComponent(pesquisaText, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pesquisaLabel)
                    .addComponent(pesquisaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(autorRadio)
                    .addComponent(idRadio)
                    .addComponent(areaRadio)
                    .addComponent(todosRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void areaRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaRadioActionPerformed

        try {             try {                 listarAreaTarefas();             } catch (FileNotFoundException ex) {                 Logger.getLogger(TelaExercicioInterno.class.getName()).log(Level.SEVERE, null, ex);             }         } catch (AreaInexistenteException ex) {             Logger.getLogger(TelaExercicioInterno.class.getName()).log(Level.SEVERE, null, ex);         }     }//GEN-LAST:event_areaRadioActionPerformed

    private void todosRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todosRadioActionPerformed

        listarTodasTarefas();     }//GEN-LAST:event_todosRadioActionPerformed

    
     class SimpleTableModel extends AbstractTableModel {

        ArrayList linhas = null;
        String[] colunas = null;

        public SimpleTableModel(ArrayList dados, String[] colunas) {
            setLinhas(dados);
            setColunas(colunas);
        }

        public String[] getColunas() {
            return colunas;
        }

        public ArrayList getLinhas() {
            return linhas;
        }

        public void setColunas(String[] strings) {
            colunas = strings;
        }

        public void setLinhas(ArrayList list) {
            linhas = list;
        }

        @Override
        public int getRowCount() {
            return getLinhas().size();
        }

        @Override
        public int getColumnCount() {
            return getColunas().length;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            String[] linha = (String[]) getLinhas().get(rowIndex);
            // Retorna o objeto que esta na coluna  
            return linha[columnIndex];
        }

        public void addRow(String[] dadosLinha) {
            getLinhas().add(dadosLinha);
            // Informa a jtable de que houve linhas incluidas no modelo  
            // COmo adicionamos no final, pegamos o tamanho total do modelo  
            // menos 1 para obter a linha incluida.  
            int linha = getLinhas().size() - 1;
            fireTableRowsInserted(linha, linha);
            return;
        }
    }

    public void listarTodasTarefas() {
        File raiz = new File("./Tarefas");
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Tarefa"};
        SimpleTableModel modelo = new SimpleTableModel(dados, colunas);
        for (File f : raiz.listFiles()) {
            if ((f.isFile()) && !(f.getName().contains("tarefas"))) {
                dados.add(new String[]{f.getName()});
            }
        }
        jTable1.setModel(modelo);
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    public void recuperarDados() {
        int linhas = jTable1.getRowCount();
        int colunas = jTable1.getColumnCount();
        for (int linha = 0; linha < linhas; linha++) {
            for (int col = 0; col < colunas; col++) {
                jTable1.getModel().getValueAt(linha, col); // Pra recuparar o valor de uma celula da tabela  
            }
        }
    }

    public void listarAreaTarefas() throws AreaInexistenteException, FileNotFoundException {
        String area = pesquisaText.getText();
        Portifolio p = new Portifolio();
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Tarefa"};
        SimpleTableModel modelo = new SimpleTableModel(dados, colunas);
        LinkedList<String> port = new LinkedList<String>();
        PortifolioXml.lerXml();
        
        XStream x = new XStream(new DomDriver());
        // carrega o arquivo XML
            FileInputStream input = new FileInputStream(new File(XmlPersistencia.DIRTAREFAS+"tarefas.xml"));
            // informa o nome do nó raiz do xml
            x.alias("portifolio", Portifolio.class);
            x.alias("metadados", MetadadoTarefa.class);
            // cria um objeto da classe, contendo os dados lidos no xml
            Portifolio pf = (Portifolio) x.fromXML(input);
            if (pf.getTarefas()==null){
                pf.setTarefas(new LinkedList<MetadadoTarefa>()) ;
            }
            
            for (MetadadoTarefa mt : pf.getTarefas()){
                if ((mt.getArea().equals(area))) {
                dados.add(new String[]{"TESTE"});
            }
            }
        
        /*
        port.add(PortifolioXml.lerXml().toString());

        for (int i=0; i< port.size();i++){
            System.out.println(port.get(i).toString());
        }
        /*
        for (int i = 0; i < port.size(); i++) {
            if (area.equals(port.get(i).getTarefas().get(i).getArea())) {
                dados.add(new String[]{port.get(i).getTarefas().get(i).toString()});
            } 
        }*/
        jTable1.setModel(modelo);
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    private void todosRadioActionPerformed(java.awt.event.ActionEvent evt) {                                           
        listarTodasTarefas();
    }                                          

    private void areaRadioActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try {
            try {
                listarAreaTarefas();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(TelaExercicioInterno.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (AreaInexistenteException ex) {
            Logger.getLogger(TelaExercicioInterno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                         
   
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton areaRadio;
    private javax.swing.JRadioButton autorRadio;
    private javax.swing.JRadioButton idRadio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel pesquisaLabel;
    private javax.swing.JTextField pesquisaText;
    private javax.swing.JRadioButton todosRadio;
    // End of variables declaration//GEN-END:variables
}
